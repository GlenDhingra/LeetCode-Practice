/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) 
    {
        List<List<Integer>> res = new ArrayList<>();
        if( root == null )
        {
            return res;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        ArrayList<Integer> list = new ArrayList<>();
        list.add(root.val);
        res.add(list);
        while( !queue.isEmpty() )
        {
            ArrayList<Integer> another = new ArrayList<>();
            int size = queue.size();
            for( int i = 0 ; i < size ; i++ )
            {
                TreeNode curr = queue.poll();
                if( curr.left != null )
                {
                    queue.offer(curr.left);
                    another.add(curr.left.val);
                }
                if( curr.right != null )
                {
                    queue.offer(curr.right);
                    another.add(curr.right.val);
                }
            }
            if( another.size() >= 1 )
            {
                res.add(another);
            }
        }
        return res;
    }
    
}