class LongestCommonSubsequence
{
	public static void main( String args[] ){
		char[] arr1 = new char[]{ 'a','b','c','d','g','h'  };
		char[] arr2 = new char[]{ 'a','b','e','d','f','h','r'  };

		int[][] dp = new int[arr1.length+1][arr2.length+1];

		for( int i = 0 ; i <= arr1.length ; i++ ){
			for( int j = 0 ; j <= arr2.length ; j++ ){
				if( i == 0 || j == 0 ){
					dp[i][j] = 0;
				} else if( arr1[i-1] == arr2[j-1] ){
					dp[i][j] = Math.max( dp[i-1][j-1] + 1 , Math.max( dp[i-1][j], dp[i][j-1] ) );
				} else{
					dp[i][j] = Math.max( dp[i-1][j], dp[i][j-1] );
				}
			}
		}
		for( int i = 0 ; i <= arr1.length ; i++ ){
			System.out.println();
			for( int j = 0 ; j <= arr2.length ; j++ ){
				System.out.print(dp[i][j] + "\t");
			}
		}

	}
}

/*

			a		b		e		d		f		h		e
	0       0       0       0       0       0       0       0
a	0       1       1       1       1       1       1       1
b	0       1       2       2       2       2       2       2
c	0       1       2       2       2       2       2       2
d	0       1       2       2       3       3       3       3
g	0       1       2       2       3       3       3       3
h	0       1       2       2       3       3       4       4



*/